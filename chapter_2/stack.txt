$ gdb -q a.out
Reading symbols from a.out...done.
(gdb) break 7
Breakpoint 1 at 0x4005fb: file scope.c, line 7.
(gdb) run
Starting program: /home/frosty/hack/chapter_2/code/a.out 
[main] i @ 0x7fffffffded4 = 3
[main] j @ 0x601048 = 42
    [func1] i @ 0x7fffffffdeb4 = 5
    [func1] j @ 0x601048 = 42
        [func2] i @ 0x7fffffffde94 = 7
        [func2] j @ 0x601048 = 42
        [func2] j = 1336

Breakpoint 1, func3 () at scope.c:7
7       printf("\t\t\t[func3] i @ %p = %d\n", &i, i);
(gdb) bt
#0  func3 () at scope.c:7
#1  0x00000000004006b5 in func2 () at scope.c:19
#2  0x000000000040075e in func1 () at scope.c:31
#3  0x0000000000400807 in main () at scope.c:43
(gdb) 

"bt full" will provide where the stack trace went and will print the local variables inside

(gdb) bt full
#0  func3 () at scope.c:7
        i = 11
        j = 999
#1  0x00000000004006b5 in func2 () at scope.c:19
        i = 7
#2  0x000000000040075e in func1 () at scope.c:31
        i = 5
#3  0x0000000000400807 in main () at scope.c:43
        i = 3

